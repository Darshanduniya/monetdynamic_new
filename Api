from airflow import DAG
from airflow.models import DagRun
from airflow.operators.python_operator import PythonOperator
from datetime import datetime

def get_last_execution_date(dag_id):
    # Retrieve the last execution of the DAG
    dag_runs = DagRun.find(dag_id=dag_id, state='success', _limit=1, _order_by=DagRun.execution_date.desc())

    if dag_runs:
        last_execution_date = dag_runs[0].execution_date
        print(f"The last execution date of DAG '{dag_id}' was: {last_execution_date}")
    else:
        print(f"No successful executions found for DAG '{dag_id}'")

# Define the DAG
dag = DAG(
    dag_id='get_last_execution_date_dag',
    start_date=datetime(2023, 7, 12),
    schedule_interval=None
)

# Define the PythonOperator task
get_execution_date_task = PythonOperator(
    task_id='get_execution_date',
    python_callable=get_last_execution_date,
    op_kwargs={'dag_id': 'your_dag_id'},
    dag=dag
)

# Set the task dependencies
get_execution_date_task

